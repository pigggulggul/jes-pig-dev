user nginx; # user라는 사용자 계정 사용
worker_processes auto; # 워커 프로세스의 수를 설정

events {
    worker_connections 1024;  # 각 워커 프로세스당 최대 연결 수
}

http {
    include       mime.types; # Nginx가 MIME(파일 형식 표준) 타입을 참조하도록 지정합니다. 
    default_type  application/octet-stream; # 알 수 없는 파일 일 때 이진 데이터로 처리

    sendfile        on; # Nginx가 파일을 전송할 때 커널 수준에서 파일 전송을 최적화
    keepalive_timeout  65; # 클라이언트와 서버간의 TCP 연결을 유지시간

    # HTTP(80)를 HTTPS(443)로 리디렉션
    server {
        listen 80;
        server_name impig.site www.impig.site;

        # 모든 HTTP 요청을 HTTPS로 리디렉션
        return 301 https://$host$request_uri;
    }
    # # HTTPS 설정
    # server {
    #     listen 443 ssl;
    #     server_name impig.site www.impig.site;

    #     # SSL 인증서 경로 (Let's Encrypt)
    #     ssl_certificate /etc/letsencrypt/live/impig.site/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/impig.site/privkey.pem;
    #     include /etc/letsencrypt/options-ssl-nginx.conf;
    #     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    #     # 프론트엔드 정적 파일 제공
    #     location / {
    #         root /usr/share/nginx/html;
    #         try_files $uri $uri/ /index.html;
    #     }

    #     # API 요청 처리 (백엔드로 프록시)
    #     location /api/ {
    #         rewrite ^/api(.*) $1 break; # '/api/ 접두사를 제거하고 나머지 부분을 경로를 재설정하여
    #         proxy_pass http://backend:5000;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         add_header 'Access-Control-Allow-Origin' '*'; # 모든 도메인 허용
    #         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    #         add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Accept, Content-Type';
    #     }
    # }
}